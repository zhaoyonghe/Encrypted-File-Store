=================================================================================
Compile & test introduction:
=================================================================================
To compile, run
	make
Then you will have executable files for cstore and cstore_test. Then run
	make test
to execute the test program. You can check and modify the test.c for a customized test. See appendix for an expected test output.

=================================================================================
Commands introduction:
=================================================================================

cstore supports 5 commands: init, list, add, extract, delete.

NOTE: 
If you input too many arguments, cstore will work, ignoring the last several unnecessary arguments. 
However, if you input too few arguments or command that does not follow the correct pattern, cstore will return an error.

init: cstore init [-p password] <archive name>
Error message(s) that may display:
1. The archive already exists.
2. Cannot create initial files for the archive for some reasons e.g. permission denied, no space.

list: cstore list archivename
Error message(s) that may display:
1. The archive does not exist.

add: cstore add [-p password] archivename file1 file2 file3 ...
If the file you want to add already exists in the archive, cstore will skip it and process the next file.
Error message(s) that may display:
1. The archive does not exist.
2. The input password is wrong or the archive is tampered by someone.
3. The file you want to add does not exist.
4. Other errors e.g. cannot read/write files, no memory.

extract: cstore extract [-p password] archivename file1 file2 file3 ...
Decrypt and copy files from archive to the currect working directory. If the file you want to extrat does not exist in the archive, cstore will skip it and process the next file.
Error message(s) that may display:
1. The archive does not exist.
2. The input password is wrong or the archive is tampered by someone.
3. Other errors e.g. cannot read/write files, no memory.

delete: cstore delete [-p password] archivename file1 file2 file3 ...
If the file you want to delete does not exist in the archive, cstore will skip it and process the next file.
Error message(s) that may display:
Same as extract.

=================================================================================
Design:
=================================================================================
Keys Generation:
cstore uses two different keys: one for integrity verification, which is generated by iteratively apply SHA2-256 on the password for 10,000 times; one for encryption/decryption, which is generated by iteratively apply SHA2-256 on the password for 20,000 times. cstore does not store the password and the keys. 

Integrity Verification:
cstore uses HMAC to verify the integrity. To get a HMAC, cstore first iterates through all files in an archive (except from the hmac file that stores the HMAC calculated last time) and connect their content, content size, file name, file name size together as a message byte array. Then, it gets HMAC by calling hmac(key for integrity verification, message) and compares it with the previously stored one. If they are same, then the possibility that the archive was tampered is negligible.

Archive Initialization:
cstore adds a default init file in every new empty archive. The existence of this init file makes the first HMAC calculation very convenient.

Encryption & Decription:
cstore uses aes_encrypt and aes_decrypt (ECB mode) to implement the AES CBC mode encryption/decryption. Because, in the class, we know AES ECB will leak the file information and is not secure. CBC is a stronger and more secure mode. iv is extracted from /dev/urandom for every file encryption and will be saved in the archive for the next decryption. 

File Names:
cstore will stitch a '_' in the front of the file name to be added. The stored iv files start with "iv_". The init file is "init.txt". The hmac file is "hmac". If you want to add a file called "hmac" to the archive, there is no name collision. The files in the archive will be: _hmac, iv_hmac, init.txt hmac.

=================================================================================
Appendix:
=================================================================================

A possible output of the test program. 

yz3687@yonghe:~/Encrypted-File-Store$ make test
./cstore_test
=========== Unit tests ===========
My RAW AES CBC mode tests: SUCCEEDED
My hmac tests: SUCCEEDED
=========== Functional tests ===========
[STEP] Clean up the environment.
rm -rf /tmp/cstore

[STEP] Archive my_archive should be successfully initialized with password hahaha.
./cstore init -p hahaha my_archive
Archive my_archive is successfully initialized.

[STEP] Archive my_archive cannot be reinitialized.
./cstore init -p hahaha my_archive
Archive my_archive already exists.

[STEP] Now, no file is in my_archive
./cstore list my_archive
Files in the archive my_archive:

[STEP] Typo, my_archiv does not exist.
./cstore list my_archiv
Archive my_archiv does not exist or was deleted by someone.

[STEP] Add ./testfiles/a.txt to my_archive.
./cstore add -p hahaha my_archive ./testfiles/a.txt
Password verification passed.
File ./testfiles/a.txt is successfully added to archive my_archive.

[STEP] Now, a.txt is in my_archive.
./cstore list my_archive
Files in the archive my_archive:
a.txt

[STEP] Add ./testfiles/a.txt, ./testfiles/b.txt to my_archive. Since a.txt already exists, only b.txt can be added.
./cstore add -p hahaha my_archive ./testfiles/a.txt ./testfiles/b.txt
Password verification passed.
File a.txt already exists in archive my_archive. Skip it.
File ./testfiles/b.txt is successfully added to archive my_archive.

[STEP] Now, a.txt and b.txt are in my_archive.
./cstore list my_archive
Files in the archive my_archive:
b.txt
a.txt

[STEP] ./testfiles/c.txt cannot be added to my_archive with wrong password.
./cstore add -p wrong my_archive ./testfiles/a.txt
Your password is not correct or the integrity of archive my_archive is broken by someone.

[STEP] Now, only a.txt and b.txt are in my_archive.
./cstore list my_archive
Files in the archive my_archive:
b.txt
a.txt

[STEP] Files in my_archive are encrypted.
Plain text of a.txt:
test test test test
test test test test
test test test test
test test test test
Cipher text of a.txt in my_archive:
�+��G��f.�MO�� e���D�z�I 7���y��0楟56���\4g@�\��ɗ�~�l�군c��(�b�;޾�G. uIj����&���}�Z��2Gżq3��}�?��d
Plain text of b.txt:
Important message.
Cipher text of b.txt in my_archive:
G���hQ�P}��0�wĢj�چJ�,+a�5Ң�*?�E����ize
                                          �z

[STEP] Files cannot be extracted with wrong password.
./cstore extract -p bad my_archive a.txt b.txt c.txt
Your password is not correct or the integrity of archive my_archive is broken by someone.

[STEP] Extract a.txt, b.txt, c.txt to current working directory. Since c.txt is not in my_archive, only a.txt and b.txt can be extracted.
./cstore extract -p hahaha my_archive a.txt b.txt c.txt
Password verification passed.
File a.txt is successfully extracted from archive my_archive to the current working directory.
File b.txt is successfully extracted from archive my_archive to the current working directory.
File c.txt does not exist in archive my_archive. Skip it.

[STEP] The content of a.txt and b.txt keep same.
Original a.txt:
test test test test
test test test test
test test test test
test test test test
a.txt extracted from my_archive:
test test test test
test test test test
test test test test
test test test test
Original b.txt:
Important message.
b.txt extracted from my_archive:
Important message.

[STEP] Files cannot be deleted with wrong password.
./cstore delete -p i_want_to_delete my_archive b.txt c.txt
Your password is not correct or the integrity of archive my_archive is broken by someone.

[STEP] Delete b.txt, c.txt. Since c.txt is not in my_archive, only b.txt can be deleted.
./cstore delete -p hahaha my_archive b.txt c.txt
Password verification passed.
File b.txt is successfully deleted from archive my_archive.
File c.txt does not exist in archive my_archive. Skip it.

[STEP] Now, we only have a.txt in my_archive
./cstore list my_archive
Files in the archive my_archive:
a.txt

[STEP] Now, I can extract a.txt.
rm *.txt
./cstore extract -p hahaha my_archive a.txt
Password verification passed.
File a.txt is successfully extracted from archive my_archive to the current working directory.

[STEP] A bad guy tampered my_archive.
echo a >> /tmp/cstore/my_archive/_a.txt

[STEP] Now, I cannot extract a.txt even if I use the correct password.
./cstore extract -p hahaha my_archive a.txt
Your password is not correct or the integrity of archive my_archive is broken by someone.